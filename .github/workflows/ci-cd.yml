name: Build, Test & Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release > /tmp/semantic-release.log 2>&1 || true
          cat /tmp/semantic-release.log
          
          # Check if a new release was published
          if grep -q "Published release" /tmp/semantic-release.log || grep -q "Created tag" /tmp/semantic-release.log; then
            echo "new_release_published=true" >> $GITHUB_OUTPUT
            # Extract version from git tags
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "unknown")
            echo "new_release_version=${VERSION}" >> $GITHUB_OUTPUT
            echo "✅ New release published: ${VERSION}"
          else
            echo "new_release_published=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No new release published"
          fi
      
      - name: Debug Release Outputs
        run: |
          echo "New release published: ${{ steps.semantic.outputs.new_release_published }}"
          echo "New release version: ${{ steps.semantic.outputs.new_release_version }}"

  deploy:
    name: Deploy to Render
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.release.outputs.new_release_published == 'true'

    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
          echo "✅ Deployment triggered successfully for version ${{ needs.release.outputs.new_release_version }}"

      - name: Wait for deployment
        run: |
          echo "⏳ Waiting 30 seconds for deployment to start..."
          sleep 30
          echo "✅ Deployment should be in progress on Render"
